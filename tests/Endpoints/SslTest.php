<?php

namespace nickurt\HostFact\Tests\Endpoints;

class SslTest extends BaseEndpointTest
{
    /** @test */
    public function it_can_create_a_new_ssl()
    {
        $this->mockApiClientResponse(
            new \GuzzleHttp\Psr7\Response(200, [], '{"controller":"ssl","action":"add","status":"success","date":"2019-05-20T12:00:00+02:00","ssl":{"Identifier":"4","CommonName":"example.com","Debtor":"1","DebtorCode":"DB0001","Registrar":"1","SSLTypeID":"1","ownerHandle":"1","adminHandle":"1","techHandle":"1","Type":"domain","Wildcard":"no","MultiDomain":"yes","MultiDomainRecords":[],"ApproverEmail":"","CSR":"","ServerSoftware":"linux","Period":"1","RequestDate":"","RenewDate":"","RegistrarReference":"","Comment":"","Status":"waiting","Created":"2019-05-20 12:00:00","Modified":"2019-05-20 12:00:00","Subscription":{"Number":"1","NumberSuffix":"","ProductCode":"P004","Description":"SSL certificate","PriceExcl":"50","PriceIncl":"60.5","TaxPercentage":"21","DiscountPercentage":"0","Periods":"1","Periodic":"j","StartPeriod":"2019-05-17","EndPeriod":"2020-05-17","NextDate":"2019-05-03","ContractPeriods":"1","ContractPeriodic":"j","StartContract":"2019-05-17","EndContract":"2020-05-17","TerminationDate":"","Reminder":"","InvoiceAuthorisation":"yes","AmountExcl":"50","AmountIncl":"60.5","AutoRenew":"once"},"SSLProductInfo":{"Name":"SSL dummy product","Brand":"SSLs","TemplateName":"","Product":"4","Periods":["1","2","3"],"Type":"domain","Wildcard":"no","MultiDomain":"yes","MultiDomainIncluded":"4","MultiDomainMax":"10"},"RegistrarInfo":{"Identifier":"1","Class":"registrarclass","Name":"Example registrar","Testmode":"1","DefaultDNSTemplate":"0","AdminHandle":"0","TechHandle":"0"}}}')
        );

        $ssl = $this->hostFact->ssl()->add([
            'DebtorCode' => 'DB0001',
            'CommonName' => 'example.com',
            'Period' => '1',
            'SSLTypeID' => '1',
            'HasSubscription' => 'yes',
            'Subscription' => [
                'ProductCode' => 'P004'
            ]
        ]);

        $this->assertSame(['controller' => 'ssl', 'action' => 'add', 'status' => 'success', 'date' => '2019-05-20T12:00:00+02:00', 'ssl' => ['Identifier' => '4', 'CommonName' => 'example.com', 'Debtor' => '1', 'DebtorCode' => 'DB0001', 'Registrar' => '1', 'SSLTypeID' => '1', 'ownerHandle' => '1', 'adminHandle' => '1', 'techHandle' => '1', 'Type' => 'domain', 'Wildcard' => 'no', 'MultiDomain' => 'yes', 'MultiDomainRecords' => [], 'ApproverEmail' => '', 'CSR' => '', 'ServerSoftware' => 'linux', 'Period' => '1', 'RequestDate' => '', 'RenewDate' => '', 'RegistrarReference' => '', 'Comment' => '', 'Status' => 'waiting', 'Created' => '2019-05-20 12:00:00', 'Modified' => '2019-05-20 12:00:00', 'Subscription' => ['Number' => '1', 'NumberSuffix' => '', 'ProductCode' => 'P004', 'Description' => 'SSL certificate', 'PriceExcl' => '50', 'PriceIncl' => '60.5', 'TaxPercentage' => '21', 'DiscountPercentage' => '0', 'Periods' => '1', 'Periodic' => 'j', 'StartPeriod' => '2019-05-17', 'EndPeriod' => '2020-05-17', 'NextDate' => '2019-05-03', 'ContractPeriods' => '1', 'ContractPeriodic' => 'j', 'StartContract' => '2019-05-17', 'EndContract' => '2020-05-17', 'TerminationDate' => '', 'Reminder' => '', 'InvoiceAuthorisation' => 'yes', 'AmountExcl' => '50', 'AmountIncl' => '60.5', 'AutoRenew' => 'once'], 'SSLProductInfo' => ['Name' => 'SSL dummy product', 'Brand' => 'SSLs', 'TemplateName' => '', 'Product' => '4', 'Periods' => [0 => '1', 1 => '2', 2 => '3'], 'Type' => 'domain', 'Wildcard' => 'no', 'MultiDomain' => 'yes', 'MultiDomainIncluded' => '4', 'MultiDomainMax' => '10'], 'RegistrarInfo' => ['Identifier' => '1', 'Class' => 'registrarclass', 'Name' => 'Example registrar', 'Testmode' => '1', 'DefaultDNSTemplate' => '0', 'AdminHandle' => '0', 'TechHandle' => '0']]], $ssl);
    }

    /** @test */
    public function it_can_download_an_existing_ssl()
    {
        $this->mockApiClientResponse(
            new \GuzzleHttp\Psr7\Response(200, [], '{"controller":"ssl","action":"download","status":"success","date":"2019-05-20T12:00:00+02:00","ssl":{"Filename":"example.com.cer","Base64":"dGhpcy13aW...ZpY2F0ZQ=="}}')
        );

        $ssl = $this->hostFact->ssl()->download([
            'Identifier' => '1',
            // 'CommonName' => 'example.com',
        ]);

        $this->assertSame(['controller' => 'ssl', 'action' => 'download', 'status' => 'success', 'date' => '2019-05-20T12:00:00+02:00', 'ssl' => ['Filename' => 'example.com.cer', 'Base64' => 'dGhpcy13aW...ZpY2F0ZQ==']], $ssl);
    }

    /** @test */
    public function it_can_edit_an_existing_ssl()
    {
        $this->mockApiClientResponse(
            new \GuzzleHttp\Psr7\Response(200, [], '{"controller":"ssl","action":"edit","status":"success","date":"2019-05-20T12:00:00+02:00","ssl":{"Identifier":"1","CommonName":"example.com","Debtor":"1","DebtorCode":"DB0001","Registrar":"1","SSLTypeID":"1","ownerHandle":"1","adminHandle":"1","techHandle":"1","Type":"domain","Wildcard":"no","MultiDomain":"yes","MultiDomainRecords":["example2.com","example3.com"],"ApproverEmail":"info@hostfact.nl","CSR":"-----BEGIN...QUEST-----","ServerSoftware":"linux","Period":"1","RequestDate":"2015-01-21","RenewDate":"2016-01-21","RegistrarReference":"","Comment":"","Status":"active","Created":"2019-05-20 12:00:00","Modified":"2019-05-20 12:00:00","Subscription":{"Number":"1","NumberSuffix":"","ProductCode":"P004","Description":"SSL testproduct - example.com","PriceExcl":"11.5","PriceIncl":"13.915","TaxPercentage":"21","DiscountPercentage":"0","Periods":"1","Periodic":"j","StartPeriod":"2018-01-01","EndPeriod":"2019-01-01","NextDate":"2018-04-17","ContractPeriods":"1","ContractPeriodic":"j","StartContract":"2018-01-14","EndContract":"2018-01-14","TerminationDate":"","Reminder":"","InvoiceAuthorisation":"yes","AmountExcl":"11.5","AmountIncl":"13.92","AutoRenew":"no"},"SSLProductInfo":{"Name":"SSL dummy product","Brand":"SSLs","TemplateName":"","Product":"4","Periods":["1","2","3"],"Type":"domain","Wildcard":"no","MultiDomain":"yes","MultiDomainIncluded":"4","MultiDomainMax":"10"},"RegistrarInfo":{"Identifier":"1","Class":"registrarclass","Name":"Example registrar","Testmode":"1","DefaultDNSTemplate":"0","AdminHandle":"0","TechHandle":"0"}}}')
        );

        $ssl = $this->hostFact->ssl()->edit([
            'CommonName' => 'example.com',
            'Status' => 'active',
            'MultiDomain' => 'yes',
            'MultiDomainRecords' => ['example2.com', 'example3.com'],
            'RequestDate' => '2015-01-21',
            'RenewDate' => '2016-01-21',
            'HasSubscription' => 'yes',
            'Subscription' => [
                'ProductCode' => 'P004'
            ]
        ]);

        $this->assertSame(['controller' => 'ssl', 'action' => 'edit', 'status' => 'success', 'date' => '2019-05-20T12:00:00+02:00', 'ssl' => ['Identifier' => '1', 'CommonName' => 'example.com', 'Debtor' => '1', 'DebtorCode' => 'DB0001', 'Registrar' => '1', 'SSLTypeID' => '1', 'ownerHandle' => '1', 'adminHandle' => '1', 'techHandle' => '1', 'Type' => 'domain', 'Wildcard' => 'no', 'MultiDomain' => 'yes', 'MultiDomainRecords' => [0 => 'example2.com', 1 => 'example3.com'], 'ApproverEmail' => 'info@hostfact.nl', 'CSR' => '-----BEGIN...QUEST-----', 'ServerSoftware' => 'linux', 'Period' => '1', 'RequestDate' => '2015-01-21', 'RenewDate' => '2016-01-21', 'RegistrarReference' => '', 'Comment' => '', 'Status' => 'active', 'Created' => '2019-05-20 12:00:00', 'Modified' => '2019-05-20 12:00:00', 'Subscription' => ['Number' => '1', 'NumberSuffix' => '', 'ProductCode' => 'P004', 'Description' => 'SSL testproduct - example.com', 'PriceExcl' => '11.5', 'PriceIncl' => '13.915', 'TaxPercentage' => '21', 'DiscountPercentage' => '0', 'Periods' => '1', 'Periodic' => 'j', 'StartPeriod' => '2018-01-01', 'EndPeriod' => '2019-01-01', 'NextDate' => '2018-04-17', 'ContractPeriods' => '1', 'ContractPeriodic' => 'j', 'StartContract' => '2018-01-14', 'EndContract' => '2018-01-14', 'TerminationDate' => '', 'Reminder' => '', 'InvoiceAuthorisation' => 'yes', 'AmountExcl' => '11.5', 'AmountIncl' => '13.92', 'AutoRenew' => 'no'], 'SSLProductInfo' => ['Name' => 'SSL dummy product', 'Brand' => 'SSLs', 'TemplateName' => '', 'Product' => '4', 'Periods' => [0 => '1', 1 => '2', 2 => '3'], 'Type' => 'domain', 'Wildcard' => 'no', 'MultiDomain' => 'yes', 'MultiDomainIncluded' => '4', 'MultiDomainMax' => '10'], 'RegistrarInfo' => ['Identifier' => '1', 'Class' => 'registrarclass', 'Name' => 'Example registrar', 'Testmode' => '1', 'DefaultDNSTemplate' => '0', 'AdminHandle' => '0', 'TechHandle' => '0']]], $ssl);
    }

    /** @test */
    public function it_can_get_status_an_existing_ssl()
    {
        $this->mockApiClientResponse(
            new \GuzzleHttp\Psr7\Response(200, [], '{"controller":"ssl","action":"getstatus","status":"success","date":"2019-05-20T12:00:00+02:00","ssl":{"Identifier":"1","CommonName":"example.com","Debtor":"1","DebtorCode":"DB0001","Registrar":"1","SSLTypeID":"1","ownerHandle":"1","adminHandle":"1","techHandle":"1","Type":"domain","Wildcard":"no","MultiDomain":"yes","MultiDomainRecords":[],"ApproverEmail":"info@hostfact.nl","CSR":"-----BEGIN...QUEST-----","ServerSoftware":"linux","Period":"1","RequestDate":"","RenewDate":"","RegistrarReference":"","Comment":"","Status":"inrequest","Created":"2019-05-20 12:00:00","Modified":"2019-05-20 12:00:00","Subscription":{"Number":"1","NumberSuffix":"","ProductCode":"P004","Description":"SSL testproduct - example.com","PriceExcl":"11.5","PriceIncl":"13.915","TaxPercentage":"21","DiscountPercentage":"0","Periods":"1","Periodic":"j","StartPeriod":"2018-01-01","EndPeriod":"2018-01-01","NextDate":"2018-04-17","ContractPeriods":"1","ContractPeriodic":"j","StartContract":"2018-01-14","EndContract":"2018-01-14","TerminationDate":"","Reminder":"","InvoiceAuthorisation":"yes","AmountExcl":"11.5","AmountIncl":"13.92","AutoRenew":"no"},"SSLProductInfo":{"Name":"SSL dummy product","Brand":"SSLs","TemplateName":"","Product":"4","Periods":["1","2","3"],"Type":"domain","Wildcard":"no","MultiDomain":"yes","MultiDomainIncluded":"4","MultiDomainMax":"10"},"RegistrarInfo":{"Identifier":"1","Class":"registrarclass","Name":"Example registrar","Testmode":"1","DefaultDNSTemplate":"0","AdminHandle":"0","TechHandle":"0"}}}')
        );

        $ssl = $this->hostFact->ssl()->getStatus([
            'Identifier' => '1',
            // 'CommonName' => 'example.com',
        ]);

        $this->assertSame(['controller' => 'ssl', 'action' => 'getstatus', 'status' => 'success', 'date' => '2019-05-20T12:00:00+02:00', 'ssl' => ['Identifier' => '1', 'CommonName' => 'example.com', 'Debtor' => '1', 'DebtorCode' => 'DB0001', 'Registrar' => '1', 'SSLTypeID' => '1', 'ownerHandle' => '1', 'adminHandle' => '1', 'techHandle' => '1', 'Type' => 'domain', 'Wildcard' => 'no', 'MultiDomain' => 'yes', 'MultiDomainRecords' => [], 'ApproverEmail' => 'info@hostfact.nl', 'CSR' => '-----BEGIN...QUEST-----', 'ServerSoftware' => 'linux', 'Period' => '1', 'RequestDate' => '', 'RenewDate' => '', 'RegistrarReference' => '', 'Comment' => '', 'Status' => 'inrequest', 'Created' => '2019-05-20 12:00:00', 'Modified' => '2019-05-20 12:00:00', 'Subscription' => ['Number' => '1', 'NumberSuffix' => '', 'ProductCode' => 'P004', 'Description' => 'SSL testproduct - example.com', 'PriceExcl' => '11.5', 'PriceIncl' => '13.915', 'TaxPercentage' => '21', 'DiscountPercentage' => '0', 'Periods' => '1', 'Periodic' => 'j', 'StartPeriod' => '2018-01-01', 'EndPeriod' => '2018-01-01', 'NextDate' => '2018-04-17', 'ContractPeriods' => '1', 'ContractPeriodic' => 'j', 'StartContract' => '2018-01-14', 'EndContract' => '2018-01-14', 'TerminationDate' => '', 'Reminder' => '', 'InvoiceAuthorisation' => 'yes', 'AmountExcl' => '11.5', 'AmountIncl' => '13.92', 'AutoRenew' => 'no'], 'SSLProductInfo' => ['Name' => 'SSL dummy product', 'Brand' => 'SSLs', 'TemplateName' => '', 'Product' => '4', 'Periods' => [0 => '1', 1 => '2', 2 => '3'], 'Type' => 'domain', 'Wildcard' => 'no', 'MultiDomain' => 'yes', 'MultiDomainIncluded' => '4', 'MultiDomainMax' => '10'], 'RegistrarInfo' => ['Identifier' => '1', 'Class' => 'registrarclass', 'Name' => 'Example registrar', 'Testmode' => '1', 'DefaultDNSTemplate' => '0', 'AdminHandle' => '0', 'TechHandle' => '0']]], $ssl);
    }

    /** @test */
    public function it_can_list_all_the_ssl()
    {
        $this->mockApiClientResponse(
            new \GuzzleHttp\Psr7\Response(200, [], '{"controller":"ssl","action":"list","status":"success","date":"2019-05-20T12:00:00+02:00","totalresults":"3","currentresults":"3","offset":"0","filters":{"searchat":"DebtorCode","searchfor":"DB0001"},"ssl":[{"Identifier":"1","CommonName":"example.com","Debtor":"1","DebtorCode":"DB0001","CompanyName":"Company X","Initials":"John","SurName":"Jackson","Type":"domain","Wildcard":"no","MultiDomain":"yes","MultiDomainRecords":[],"ApproverEmail":"info@hostfact.nl","CSR":"-----BEGIN...QUEST-----","ServerSoftware":"linux","Period":"1","RequestDate":"","RenewDate":"","RegistrarReference":"789","Comment":"","Status":"inrequest","Subscription":{"ProductCode":"P004","Description":"SSL testproduct - example.com","Number":"1","PriceExcl":"11.5","TaxPercentage":"21","DiscountPercentage":"0","Periods":"1","Periodic":"j","StartPeriod":"2018-01-01","EndPeriod":"2018-01-01","NextDate":"2018-04-17","TerminationDate":"","AmountExcl":"11.5","AmountIncl":"13.92"},"Modified":"2019-05-20 12:00:00"},{"Identifier":"2","CommonName":"example2.com","Debtor":"1","DebtorCode":"DB0001","CompanyName":"Company X","Initials":"John","SurName":"Jackson","Type":"domain","Wildcard":"no","MultiDomain":"yes","MultiDomainRecords":[],"ApproverEmail":"test@example2.com","CSR":"","ServerSoftware":"linux","Period":"1","RequestDate":"2018-01-14","RenewDate":"2018-01-14","RegistrarReference":"","Comment":"","Status":"install","Subscription":{"ProductCode":"P004","Description":"SSL certificate - example2.com","Number":"1","PriceExcl":"50","TaxPercentage":"21","DiscountPercentage":"0","Periods":"1","Periodic":"j","StartPeriod":"2018-01-14","EndPeriod":"2018-01-14","NextDate":"2018-06-30","TerminationDate":"","AmountExcl":"50","AmountIncl":"60.5"},"Modified":"2019-05-20 12:00:00"},{"Identifier":"3","CommonName":"example3.com","Debtor":"1","DebtorCode":"DB0001","CompanyName":"Company X","Initials":"John","SurName":"Jackson","Type":"domain","Wildcard":"no","MultiDomain":"yes","MultiDomainRecords":[],"ApproverEmail":"test@example3.com","CSR":"","ServerSoftware":"linux","Period":"1","RequestDate":"2018-01-14","RenewDate":"2018-01-14","RegistrarReference":"","Comment":"","Status":"expired","Modified":"2019-05-20 12:00:00"}]}')
        );

        $ssl = $this->hostFact->ssl()->list([
            'searchat' => 'DebtorCode',
            'searchfor' => 'DB0001'
        ]);

        $this->assertSame(['controller' => 'ssl', 'action' => 'list', 'status' => 'success', 'date' => '2019-05-20T12:00:00+02:00', 'totalresults' => '3', 'currentresults' => '3', 'offset' => '0', 'filters' => ['searchat' => 'DebtorCode', 'searchfor' => 'DB0001'], 'ssl' => [0 => ['Identifier' => '1', 'CommonName' => 'example.com', 'Debtor' => '1', 'DebtorCode' => 'DB0001', 'CompanyName' => 'Company X', 'Initials' => 'John', 'SurName' => 'Jackson', 'Type' => 'domain', 'Wildcard' => 'no', 'MultiDomain' => 'yes', 'MultiDomainRecords' => [], 'ApproverEmail' => 'info@hostfact.nl', 'CSR' => '-----BEGIN...QUEST-----', 'ServerSoftware' => 'linux', 'Period' => '1', 'RequestDate' => '', 'RenewDate' => '', 'RegistrarReference' => '789', 'Comment' => '', 'Status' => 'inrequest', 'Subscription' => ['ProductCode' => 'P004', 'Description' => 'SSL testproduct - example.com', 'Number' => '1', 'PriceExcl' => '11.5', 'TaxPercentage' => '21', 'DiscountPercentage' => '0', 'Periods' => '1', 'Periodic' => 'j', 'StartPeriod' => '2018-01-01', 'EndPeriod' => '2018-01-01', 'NextDate' => '2018-04-17', 'TerminationDate' => '', 'AmountExcl' => '11.5', 'AmountIncl' => '13.92'], 'Modified' => '2019-05-20 12:00:00'], 1 => ['Identifier' => '2', 'CommonName' => 'example2.com', 'Debtor' => '1', 'DebtorCode' => 'DB0001', 'CompanyName' => 'Company X', 'Initials' => 'John', 'SurName' => 'Jackson', 'Type' => 'domain', 'Wildcard' => 'no', 'MultiDomain' => 'yes', 'MultiDomainRecords' => [], 'ApproverEmail' => 'test@example2.com', 'CSR' => '', 'ServerSoftware' => 'linux', 'Period' => '1', 'RequestDate' => '2018-01-14', 'RenewDate' => '2018-01-14', 'RegistrarReference' => '', 'Comment' => '', 'Status' => 'install', 'Subscription' => ['ProductCode' => 'P004', 'Description' => 'SSL certificate - example2.com', 'Number' => '1', 'PriceExcl' => '50', 'TaxPercentage' => '21', 'DiscountPercentage' => '0', 'Periods' => '1', 'Periodic' => 'j', 'StartPeriod' => '2018-01-14', 'EndPeriod' => '2018-01-14', 'NextDate' => '2018-06-30', 'TerminationDate' => '', 'AmountExcl' => '50', 'AmountIncl' => '60.5'], 'Modified' => '2019-05-20 12:00:00'], 2 => ['Identifier' => '3', 'CommonName' => 'example3.com', 'Debtor' => '1', 'DebtorCode' => 'DB0001', 'CompanyName' => 'Company X', 'Initials' => 'John', 'SurName' => 'Jackson', 'Type' => 'domain', 'Wildcard' => 'no', 'MultiDomain' => 'yes', 'MultiDomainRecords' => [], 'ApproverEmail' => 'test@example3.com', 'CSR' => '', 'ServerSoftware' => 'linux', 'Period' => '1', 'RequestDate' => '2018-01-14', 'RenewDate' => '2018-01-14', 'RegistrarReference' => '', 'Comment' => '', 'Status' => 'expired', 'Modified' => '2019-05-20 12:00:00']]], $ssl);
    }

    /** @test */
    public function it_can_reissue_an_existing_ssl()
    {
        $this->mockApiClientResponse(
            new \GuzzleHttp\Psr7\Response(200, [], '{"controller":"ssl","action":"reissue","status":"success","date":"2019-05-20T12:00:00+02:00","success":["SSL certificaat is reissued"],"ssl":{"Identifier":"1","CommonName":"example.com","Debtor":"1","DebtorCode":"DB0001","Registrar":"1","SSLTypeID":"1","ownerHandle":"1","adminHandle":"1","techHandle":"1","Type":"domain","Wildcard":"no","MultiDomain":"yes","MultiDomainRecords":[],"ApproverEmail":"info@hostfact.nl","CSR":"-----BEGIN...QUEST-----","ServerSoftware":"linux","Period":"1","RequestDate":"","RenewDate":"","RegistrarReference":"","Comment":"","Status":"inrequest","Created":"2019-05-20 12:00:00","Modified":"2019-05-20 12:00:00","Subscription":{"Number":"1","NumberSuffix":"","ProductCode":"P004","Description":"SSL testproduct - example.com","PriceExcl":"11.5","PriceIncl":"13.915","TaxPercentage":"21","DiscountPercentage":"0","Periods":"1","Periodic":"j","StartPeriod":"2018-01-01","EndPeriod":"2018-01-01","NextDate":"2018-04-17","ContractPeriods":"1","ContractPeriodic":"j","StartContract":"2018-01-14","EndContract":"2018-01-14","TerminationDate":"","Reminder":"","InvoiceAuthorisation":"yes","AmountExcl":"11.5","AmountIncl":"13.92","AutoRenew":"no"},"SSLProductInfo":{"Name":"SSL dummy product","Brand":"SSLs","TemplateName":"","Product":"4","Periods":["1","2","3"],"Type":"domain","Wildcard":"no","MultiDomain":"yes","MultiDomainIncluded":"4","MultiDomainMax":"10"},"RegistrarInfo":{"Identifier":"1","Class":"registrarclass","Name":"Example registrar","Testmode":"1","DefaultDNSTemplate":"0","AdminHandle":"0","TechHandle":"0"}}}')
        );

        $ssl = $this->hostFact->ssl()->reissue([
            'Identifier' => '1',
            // 'CommonName' => 'example.com',
        ]);

        $this->assertSame(['controller' => 'ssl', 'action' => 'reissue', 'status' => 'success', 'date' => '2019-05-20T12:00:00+02:00', 'success' => [0 => 'SSL certificaat is reissued'], 'ssl' => ['Identifier' => '1', 'CommonName' => 'example.com', 'Debtor' => '1', 'DebtorCode' => 'DB0001', 'Registrar' => '1', 'SSLTypeID' => '1', 'ownerHandle' => '1', 'adminHandle' => '1', 'techHandle' => '1', 'Type' => 'domain', 'Wildcard' => 'no', 'MultiDomain' => 'yes', 'MultiDomainRecords' => [], 'ApproverEmail' => 'info@hostfact.nl', 'CSR' => '-----BEGIN...QUEST-----', 'ServerSoftware' => 'linux', 'Period' => '1', 'RequestDate' => '', 'RenewDate' => '', 'RegistrarReference' => '', 'Comment' => '', 'Status' => 'inrequest', 'Created' => '2019-05-20 12:00:00', 'Modified' => '2019-05-20 12:00:00', 'Subscription' => ['Number' => '1', 'NumberSuffix' => '', 'ProductCode' => 'P004', 'Description' => 'SSL testproduct - example.com', 'PriceExcl' => '11.5', 'PriceIncl' => '13.915', 'TaxPercentage' => '21', 'DiscountPercentage' => '0', 'Periods' => '1', 'Periodic' => 'j', 'StartPeriod' => '2018-01-01', 'EndPeriod' => '2018-01-01', 'NextDate' => '2018-04-17', 'ContractPeriods' => '1', 'ContractPeriodic' => 'j', 'StartContract' => '2018-01-14', 'EndContract' => '2018-01-14', 'TerminationDate' => '', 'Reminder' => '', 'InvoiceAuthorisation' => 'yes', 'AmountExcl' => '11.5', 'AmountIncl' => '13.92', 'AutoRenew' => 'no'], 'SSLProductInfo' => ['Name' => 'SSL dummy product', 'Brand' => 'SSLs', 'TemplateName' => '', 'Product' => '4', 'Periods' => [0 => '1', 1 => '2', 2 => '3'], 'Type' => 'domain', 'Wildcard' => 'no', 'MultiDomain' => 'yes', 'MultiDomainIncluded' => '4', 'MultiDomainMax' => '10'], 'RegistrarInfo' => ['Identifier' => '1', 'Class' => 'registrarclass', 'Name' => 'Example registrar', 'Testmode' => '1', 'DefaultDNSTemplate' => '0', 'AdminHandle' => '0', 'TechHandle' => '0']]], $ssl);
    }

    /** @test */
    public function it_can_request_an_existing_ssl()
    {
        $this->mockApiClientResponse(
            new \GuzzleHttp\Psr7\Response(200, [], '{"controller":"ssl","action":"request","status":"success","date":"2019-05-20T12:00:00+02:00","success":["SSL certificaat example.com is aangevraagd onder bestelnummer 12345"],"ssl":{"Identifier":"1","CommonName":"example.com","Debtor":"1","DebtorCode":"DB0001","Registrar":"1","SSLTypeID":"1","ownerHandle":"1","adminHandle":"1","techHandle":"1","Type":"domain","Wildcard":"no","MultiDomain":"yes","MultiDomainRecords":[],"ApproverEmail":"info@hostfact.nl","CSR":"-----BEGIN...QUEST-----","ServerSoftware":"linux","Period":"1","RequestDate":"","RenewDate":"","RegistrarReference":"12345","Comment":"","Status":"inrequest","Created":"2019-05-20 12:00:00","Modified":"2019-05-20 12:00:00","Subscription":{"Number":"1","NumberSuffix":"","ProductCode":"P004","Description":"SSL testproduct - example.com","PriceExcl":"11.5","PriceIncl":"13.915","TaxPercentage":"21","DiscountPercentage":"0","Periods":"1","Periodic":"j","StartPeriod":"2018-01-01","EndPeriod":"2018-01-01","NextDate":"2018-04-17","ContractPeriods":"1","ContractPeriodic":"j","StartContract":"2018-01-14","EndContract":"2018-01-14","TerminationDate":"","Reminder":"","InvoiceAuthorisation":"yes","AmountExcl":"11.5","AmountIncl":"13.92","AutoRenew":"no"},"SSLProductInfo":{"Name":"SSL dummy product","Brand":"SSLs","TemplateName":"","Product":"4","Periods":["1","2","3"],"Type":"domain","Wildcard":"no","MultiDomain":"yes","MultiDomainIncluded":"4","MultiDomainMax":"10"},"RegistrarInfo":{"Identifier":"1","Class":"registrarclass","Name":"Example registrar","Testmode":"1","DefaultDNSTemplate":"0","AdminHandle":"0","TechHandle":"0"}}}')
        );

        $ssl = $this->hostFact->ssl()->request([
            'Identifier' => '1',
            // 'CommonName' => 'example.com',
        ]);

        $this->assertSame(['controller' => 'ssl', 'action' => 'request', 'status' => 'success', 'date' => '2019-05-20T12:00:00+02:00', 'success' => [0 => 'SSL certificaat example.com is aangevraagd onder bestelnummer 12345'], 'ssl' => ['Identifier' => '1', 'CommonName' => 'example.com', 'Debtor' => '1', 'DebtorCode' => 'DB0001', 'Registrar' => '1', 'SSLTypeID' => '1', 'ownerHandle' => '1', 'adminHandle' => '1', 'techHandle' => '1', 'Type' => 'domain', 'Wildcard' => 'no', 'MultiDomain' => 'yes', 'MultiDomainRecords' => [], 'ApproverEmail' => 'info@hostfact.nl', 'CSR' => '-----BEGIN...QUEST-----', 'ServerSoftware' => 'linux', 'Period' => '1', 'RequestDate' => '', 'RenewDate' => '', 'RegistrarReference' => '12345', 'Comment' => '', 'Status' => 'inrequest', 'Created' => '2019-05-20 12:00:00', 'Modified' => '2019-05-20 12:00:00', 'Subscription' => ['Number' => '1', 'NumberSuffix' => '', 'ProductCode' => 'P004', 'Description' => 'SSL testproduct - example.com', 'PriceExcl' => '11.5', 'PriceIncl' => '13.915', 'TaxPercentage' => '21', 'DiscountPercentage' => '0', 'Periods' => '1', 'Periodic' => 'j', 'StartPeriod' => '2018-01-01', 'EndPeriod' => '2018-01-01', 'NextDate' => '2018-04-17', 'ContractPeriods' => '1', 'ContractPeriodic' => 'j', 'StartContract' => '2018-01-14', 'EndContract' => '2018-01-14', 'TerminationDate' => '', 'Reminder' => '', 'InvoiceAuthorisation' => 'yes', 'AmountExcl' => '11.5', 'AmountIncl' => '13.92', 'AutoRenew' => 'no'], 'SSLProductInfo' => ['Name' => 'SSL dummy product', 'Brand' => 'SSLs', 'TemplateName' => '', 'Product' => '4', 'Periods' => [0 => '1', 1 => '2', 2 => '3'], 'Type' => 'domain', 'Wildcard' => 'no', 'MultiDomain' => 'yes', 'MultiDomainIncluded' => '4', 'MultiDomainMax' => '10'], 'RegistrarInfo' => ['Identifier' => '1', 'Class' => 'registrarclass', 'Name' => 'Example registrar', 'Testmode' => '1', 'DefaultDNSTemplate' => '0', 'AdminHandle' => '0', 'TechHandle' => '0']]], $ssl);
    }

    /** @test */
    public function it_can_resend_approver_mail_of_an_existing_ssl()
    {
        $this->mockApiClientResponse(
            new \GuzzleHttp\Psr7\Response(200, [], '{"controller":"ssl","action":"resendapprovermail","status":"success","date":"2019-05-20T12:00:00+02:00","success":["De approver e-mail is opnieuw verzonden naar info@hostfact.nl"]}')
        );

        $ssl = $this->hostFact->ssl()->resendApproverMail([
            'Identifier' => '1',
            // 'CommonName' => 'example.com',
        ]);

        $this->assertSame(['controller' => 'ssl', 'action' => 'resendapprovermail', 'status' => 'success', 'date' => '2019-05-20T12:00:00+02:00', 'success' => [0 => 'De approver e-mail is opnieuw verzonden naar info@hostfact.nl']], $ssl);
    }

    /** @test */
    public function it_can_revoke_an_existing_ssl()
    {
        $this->mockApiClientResponse(
            new \GuzzleHttp\Psr7\Response(200, [], '{"controller":"ssl","action":"revoke","status":"success","date":"2019-05-20T12:00:00+02:00","success":["Certificaat example.com is gerevoked"],"ssl":{"Identifier":"1","CommonName":"example.com","Debtor":"1","DebtorCode":"DB0001","Registrar":"1","SSLTypeID":"1","ownerHandle":"1","adminHandle":"1","techHandle":"1","Type":"domain","Wildcard":"no","MultiDomain":"yes","MultiDomainRecords":[],"ApproverEmail":"info@hostfact.nl","CSR":"-----BEGIN...QUEST-----","ServerSoftware":"linux","Period":"1","RequestDate":"","RenewDate":"","RegistrarReference":"","Comment":"","Status":"removed","Created":"2019-05-20 12:00:00","Modified":"2019-05-20 12:00:00","Subscription":{"Number":"1","NumberSuffix":"","ProductCode":"P004","Description":"SSL testproduct - example.com","PriceExcl":"11.5","PriceIncl":"13.915","TaxPercentage":"21","DiscountPercentage":"0","Periods":"1","Periodic":"j","StartPeriod":"2018-01-01","EndPeriod":"2018-01-01","NextDate":"2018-04-17","ContractPeriods":"1","ContractPeriodic":"j","StartContract":"2018-01-14","EndContract":"2018-01-14","TerminationDate":"","Reminder":"","InvoiceAuthorisation":"yes","AmountExcl":"11.5","AmountIncl":"13.92","AutoRenew":"no"},"SSLProductInfo":{"Name":"SSL dummy product","Brand":"SSLs","TemplateName":"","Product":"4","Periods":["1","2","3"],"Type":"domain","Wildcard":"no","MultiDomain":"yes","MultiDomainIncluded":"4","MultiDomainMax":"10"},"RegistrarInfo":{"Identifier":"1","Class":"registrarclass","Name":"Example registrar","Testmode":"1","DefaultDNSTemplate":"0","AdminHandle":"0","TechHandle":"0"}}}')
        );

        $ssl = $this->hostFact->ssl()->revoke([
            'Identifier' => '1',
            // 'CommonName' => 'example.com',
        ]);

        $this->assertSame(['controller' => 'ssl', 'action' => 'revoke', 'status' => 'success', 'date' => '2019-05-20T12:00:00+02:00', 'success' => [0 => 'Certificaat example.com is gerevoked'], 'ssl' => ['Identifier' => '1', 'CommonName' => 'example.com', 'Debtor' => '1', 'DebtorCode' => 'DB0001', 'Registrar' => '1', 'SSLTypeID' => '1', 'ownerHandle' => '1', 'adminHandle' => '1', 'techHandle' => '1', 'Type' => 'domain', 'Wildcard' => 'no', 'MultiDomain' => 'yes', 'MultiDomainRecords' => [], 'ApproverEmail' => 'info@hostfact.nl', 'CSR' => '-----BEGIN...QUEST-----', 'ServerSoftware' => 'linux', 'Period' => '1', 'RequestDate' => '', 'RenewDate' => '', 'RegistrarReference' => '', 'Comment' => '', 'Status' => 'removed', 'Created' => '2019-05-20 12:00:00', 'Modified' => '2019-05-20 12:00:00', 'Subscription' => ['Number' => '1', 'NumberSuffix' => '', 'ProductCode' => 'P004', 'Description' => 'SSL testproduct - example.com', 'PriceExcl' => '11.5', 'PriceIncl' => '13.915', 'TaxPercentage' => '21', 'DiscountPercentage' => '0', 'Periods' => '1', 'Periodic' => 'j', 'StartPeriod' => '2018-01-01', 'EndPeriod' => '2018-01-01', 'NextDate' => '2018-04-17', 'ContractPeriods' => '1', 'ContractPeriodic' => 'j', 'StartContract' => '2018-01-14', 'EndContract' => '2018-01-14', 'TerminationDate' => '', 'Reminder' => '', 'InvoiceAuthorisation' => 'yes', 'AmountExcl' => '11.5', 'AmountIncl' => '13.92', 'AutoRenew' => 'no'], 'SSLProductInfo' => ['Name' => 'SSL dummy product', 'Brand' => 'SSLs', 'TemplateName' => '', 'Product' => '4', 'Periods' => [0 => '1', 1 => '2', 2 => '3'], 'Type' => 'domain', 'Wildcard' => 'no', 'MultiDomain' => 'yes', 'MultiDomainIncluded' => '4', 'MultiDomainMax' => '10'], 'RegistrarInfo' => ['Identifier' => '1', 'Class' => 'registrarclass', 'Name' => 'Example registrar', 'Testmode' => '1', 'DefaultDNSTemplate' => '0', 'AdminHandle' => '0', 'TechHandle' => '0']]], $ssl);
    }

    /** @test */
    public function it_can_renew_an_exising_ssl()
    {
        $this->mockApiClientResponse(
            new \GuzzleHttp\Psr7\Response(200, [], '{"controller":"ssl","action":"renew","status":"success","date":"2019-05-20T12:00:00+02:00","success":["SSL certificaat example.com is verlengd onder bestelnummer 789"],"ssl":{"Identifier":"1","CommonName":"example.com","Debtor":"1","DebtorCode":"DB0001","Registrar":"1","SSLTypeID":"1","ownerHandle":"1","adminHandle":"1","techHandle":"1","Type":"domain","Wildcard":"no","MultiDomain":"yes","MultiDomainRecords":[],"ApproverEmail":"info@hostfact.nl","CSR":"-----BEGIN...QUEST-----","ServerSoftware":"linux","Period":"1","RequestDate":"","RenewDate":"","RegistrarReference":"","Comment":"","Status":"inrequest","Created":"2019-05-20 12:00:00","Modified":"2019-05-20 12:00:00","Subscription":{"Number":"1","NumberSuffix":"","ProductCode":"P004","Description":"SSL testproduct - example.com","PriceExcl":"11.5","PriceIncl":"13.915","TaxPercentage":"21","DiscountPercentage":"0","Periods":"1","Periodic":"j","StartPeriod":"2016-05-01","EndPeriod":"2017-05-01","NextDate":"2016-04-17","ContractPeriods":"1","ContractPeriodic":"j","StartContract":"2018-01-14","EndContract":"2018-01-14","TerminationDate":"","Reminder":"","InvoiceAuthorisation":"yes","AmountExcl":"11.5","AmountIncl":"13.92","AutoRenew":"once"},"SSLProductInfo":{"Name":"SSL dummy product","Brand":"SSLs","TemplateName":"","Product":"4","Periods":["1","2","3"],"Type":"domain","Wildcard":"no","MultiDomain":"yes","MultiDomainIncluded":"4","MultiDomainMax":"10"},"RegistrarInfo":{"Identifier":"1","Class":"registrarclass","Name":"Example registrar","Testmode":"1","DefaultDNSTemplate":"0","AdminHandle":"0","TechHandle":"0"}}}')
        );

        $ssl = $this->hostFact->ssl()->renew([
            'CommonName' => 'example.com',
            'Period' => '1',
            'Subscription' => [
                'Description' => 'SSL testproduct - example.com',
                'StartPeriod' => '2016-05-01',
                'PriceExcl' => '11.5'
            ]

        ]);

        $this->assertSame(['controller' => 'ssl', 'action' => 'renew', 'status' => 'success', 'date' => '2019-05-20T12:00:00+02:00', 'success' => [0 => 'SSL certificaat example.com is verlengd onder bestelnummer 789'], 'ssl' => ['Identifier' => '1', 'CommonName' => 'example.com', 'Debtor' => '1', 'DebtorCode' => 'DB0001', 'Registrar' => '1', 'SSLTypeID' => '1', 'ownerHandle' => '1', 'adminHandle' => '1', 'techHandle' => '1', 'Type' => 'domain', 'Wildcard' => 'no', 'MultiDomain' => 'yes', 'MultiDomainRecords' => [], 'ApproverEmail' => 'info@hostfact.nl', 'CSR' => '-----BEGIN...QUEST-----', 'ServerSoftware' => 'linux', 'Period' => '1', 'RequestDate' => '', 'RenewDate' => '', 'RegistrarReference' => '', 'Comment' => '', 'Status' => 'inrequest', 'Created' => '2019-05-20 12:00:00', 'Modified' => '2019-05-20 12:00:00', 'Subscription' => ['Number' => '1', 'NumberSuffix' => '', 'ProductCode' => 'P004', 'Description' => 'SSL testproduct - example.com', 'PriceExcl' => '11.5', 'PriceIncl' => '13.915', 'TaxPercentage' => '21', 'DiscountPercentage' => '0', 'Periods' => '1', 'Periodic' => 'j', 'StartPeriod' => '2016-05-01', 'EndPeriod' => '2017-05-01', 'NextDate' => '2016-04-17', 'ContractPeriods' => '1', 'ContractPeriodic' => 'j', 'StartContract' => '2018-01-14', 'EndContract' => '2018-01-14', 'TerminationDate' => '', 'Reminder' => '', 'InvoiceAuthorisation' => 'yes', 'AmountExcl' => '11.5', 'AmountIncl' => '13.92', 'AutoRenew' => 'once'], 'SSLProductInfo' => ['Name' => 'SSL dummy product', 'Brand' => 'SSLs', 'TemplateName' => '', 'Product' => '4', 'Periods' => [0 => '1', 1 => '2', 2 => '3'], 'Type' => 'domain', 'Wildcard' => 'no', 'MultiDomain' => 'yes', 'MultiDomainIncluded' => '4', 'MultiDomainMax' => '10'], 'RegistrarInfo' => ['Identifier' => '1', 'Class' => 'registrarclass', 'Name' => 'Example registrar', 'Testmode' => '1', 'DefaultDNSTemplate' => '0', 'AdminHandle' => '0', 'TechHandle' => '0']]], $ssl);
    }

    /** @test */
    public function it_can_set_an_existing_ssl_as_installed()
    {
        $this->mockApiClientResponse(
            new \GuzzleHttp\Psr7\Response(200, [], '{"controller":"ssl","action":"installed","status":"success","date":"2019-05-20T12:00:00+02:00","success":["SSL certificaat example2.com is geïnstalleerd"],"ssl":{"Identifier":"2","CommonName":"example2.com","Debtor":"1","DebtorCode":"DB0001","Registrar":"1","SSLTypeID":"1","ownerHandle":"1","adminHandle":"1","techHandle":"1","Type":"domain","Wildcard":"no","MultiDomain":"yes","MultiDomainRecords":[],"ApproverEmail":"test@example2.com","CSR":"","ServerSoftware":"linux","Period":"1","RequestDate":"2018-01-14","RenewDate":"2018-01-14","RegistrarReference":"","Comment":"","Status":"active","Created":"2019-05-20 12:00:00","Modified":"2019-05-20 12:00:00","Subscription":{"Number":"1","NumberSuffix":"","ProductCode":"P004","Description":"SSL certificate - example2.com","PriceExcl":"50","PriceIncl":"60.5","TaxPercentage":"21","DiscountPercentage":"0","Periods":"1","Periodic":"j","StartPeriod":"2018-01-14","EndPeriod":"2018-01-14","NextDate":"2018-06-30","ContractPeriods":"1","ContractPeriodic":"j","StartContract":"2018-01-14","EndContract":"2018-01-14","TerminationDate":"","Reminder":"","InvoiceAuthorisation":"yes","AmountExcl":"50","AmountIncl":"60.5","AutoRenew":"no"},"SSLProductInfo":{"Name":"SSL dummy product","Brand":"SSLs","TemplateName":"","Product":"4","Periods":["1","2","3"],"Type":"domain","Wildcard":"no","MultiDomain":"yes","MultiDomainIncluded":"4","MultiDomainMax":"10"},"RegistrarInfo":{"Identifier":"1","Class":"registrarclass","Name":"Example registrar","Testmode":"1","DefaultDNSTemplate":"0","AdminHandle":"0","TechHandle":"0"}}}')
        );

        $ssl = $this->hostFact->ssl()->installed([
            // 'Identifier' => '2',
            'CommonName' => 'example2.com',
        ]);

        $this->assertSame(['controller' => 'ssl', 'action' => 'installed', 'status' => 'success', 'date' => '2019-05-20T12:00:00+02:00', 'success' => [0 => 'SSL certificaat example2.com is geïnstalleerd'], 'ssl' => ['Identifier' => '2', 'CommonName' => 'example2.com', 'Debtor' => '1', 'DebtorCode' => 'DB0001', 'Registrar' => '1', 'SSLTypeID' => '1', 'ownerHandle' => '1', 'adminHandle' => '1', 'techHandle' => '1', 'Type' => 'domain', 'Wildcard' => 'no', 'MultiDomain' => 'yes', 'MultiDomainRecords' => [], 'ApproverEmail' => 'test@example2.com', 'CSR' => '', 'ServerSoftware' => 'linux', 'Period' => '1', 'RequestDate' => '2018-01-14', 'RenewDate' => '2018-01-14', 'RegistrarReference' => '', 'Comment' => '', 'Status' => 'active', 'Created' => '2019-05-20 12:00:00', 'Modified' => '2019-05-20 12:00:00', 'Subscription' => ['Number' => '1', 'NumberSuffix' => '', 'ProductCode' => 'P004', 'Description' => 'SSL certificate - example2.com', 'PriceExcl' => '50', 'PriceIncl' => '60.5', 'TaxPercentage' => '21', 'DiscountPercentage' => '0', 'Periods' => '1', 'Periodic' => 'j', 'StartPeriod' => '2018-01-14', 'EndPeriod' => '2018-01-14', 'NextDate' => '2018-06-30', 'ContractPeriods' => '1', 'ContractPeriodic' => 'j', 'StartContract' => '2018-01-14', 'EndContract' => '2018-01-14', 'TerminationDate' => '', 'Reminder' => '', 'InvoiceAuthorisation' => 'yes', 'AmountExcl' => '50', 'AmountIncl' => '60.5', 'AutoRenew' => 'no'], 'SSLProductInfo' => ['Name' => 'SSL dummy product', 'Brand' => 'SSLs', 'TemplateName' => '', 'Product' => '4', 'Periods' => [0 => '1', 1 => '2', 2 => '3'], 'Type' => 'domain', 'Wildcard' => 'no', 'MultiDomain' => 'yes', 'MultiDomainIncluded' => '4', 'MultiDomainMax' => '10'], 'RegistrarInfo' => ['Identifier' => '1', 'Class' => 'registrarclass', 'Name' => 'Example registrar', 'Testmode' => '1', 'DefaultDNSTemplate' => '0', 'AdminHandle' => '0', 'TechHandle' => '0']]], $ssl);
    }

    /** @test */
    public function it_can_set_an_existing_ssl_as_uninstalled()
    {
        $this->mockApiClientResponse(
            new \GuzzleHttp\Psr7\Response(200, [], '{"controller":"ssl","action":"uninstalled","status":"success","date":"2019-05-20T12:00:00+02:00","success":["SSL certificaat example3.com is gedeïnstalleerd"],"ssl":{"Identifier":"3","CommonName":"example3.com","Debtor":"1","DebtorCode":"DB0001","Registrar":"1","SSLTypeID":"1","ownerHandle":"1","adminHandle":"1","techHandle":"1","Type":"domain","Wildcard":"no","MultiDomain":"yes","MultiDomainRecords":[],"ApproverEmail":"test@example3.com","CSR":"","ServerSoftware":"linux","Period":"1","RequestDate":"2018-01-14","RenewDate":"2018-01-14","RegistrarReference":"","Comment":"","Status":"uninstalled","Created":"2019-05-20 12:00:00","Modified":"2019-05-20 12:00:00","SSLProductInfo":{"Name":"SSL dummy product","Brand":"SSLs","TemplateName":"","Product":"4","Periods":["1","2","3"],"Type":"domain","Wildcard":"no","MultiDomain":"yes","MultiDomainIncluded":"4","MultiDomainMax":"10"},"RegistrarInfo":{"Identifier":"1","Class":"registrarclass","Name":"Example registrar","Testmode":"1","DefaultDNSTemplate":"0","AdminHandle":"0","TechHandle":"0"}}}')
        );

        $ssl = $this->hostFact->ssl()->uninstalled([
            // 'Identifier' => '1',
            'CommonName' => 'example3.com',
        ]);

        $this->assertSame(['controller' => 'ssl', 'action' => 'uninstalled', 'status' => 'success', 'date' => '2019-05-20T12:00:00+02:00', 'success' => [0 => 'SSL certificaat example3.com is gedeïnstalleerd'], 'ssl' => ['Identifier' => '3', 'CommonName' => 'example3.com', 'Debtor' => '1', 'DebtorCode' => 'DB0001', 'Registrar' => '1', 'SSLTypeID' => '1', 'ownerHandle' => '1', 'adminHandle' => '1', 'techHandle' => '1', 'Type' => 'domain', 'Wildcard' => 'no', 'MultiDomain' => 'yes', 'MultiDomainRecords' => [], 'ApproverEmail' => 'test@example3.com', 'CSR' => '', 'ServerSoftware' => 'linux', 'Period' => '1', 'RequestDate' => '2018-01-14', 'RenewDate' => '2018-01-14', 'RegistrarReference' => '', 'Comment' => '', 'Status' => 'uninstalled', 'Created' => '2019-05-20 12:00:00', 'Modified' => '2019-05-20 12:00:00', 'SSLProductInfo' => ['Name' => 'SSL dummy product', 'Brand' => 'SSLs', 'TemplateName' => '', 'Product' => '4', 'Periods' => [0 => '1', 1 => '2', 2 => '3'], 'Type' => 'domain', 'Wildcard' => 'no', 'MultiDomain' => 'yes', 'MultiDomainIncluded' => '4', 'MultiDomainMax' => '10'], 'RegistrarInfo' => ['Identifier' => '1', 'Class' => 'registrarclass', 'Name' => 'Example registrar', 'Testmode' => '1', 'DefaultDNSTemplate' => '0', 'AdminHandle' => '0', 'TechHandle' => '0']]], $ssl);
    }

    /** @test */
    public function it_can_show_an_ssl()
    {
        $this->mockApiClientResponse(
            new \GuzzleHttp\Psr7\Response(200, [], '{"controller":"ssl","action":"show","status":"success","date":"2019-05-20T12:00:00+02:00","ssl":{"Identifier":"1","CommonName":"example.com","Debtor":"1","DebtorCode":"DB0001","Registrar":"1","SSLTypeID":"1","ownerHandle":"1","adminHandle":"1","techHandle":"1","Type":"domain","Wildcard":"no","MultiDomain":"yes","MultiDomainRecords":[],"ApproverEmail":"info@hostfact.nl","CSR":"-----BEGIN...QUEST-----","ServerSoftware":"linux","Period":"1","RequestDate":"","RenewDate":"","RegistrarReference":"","Comment":"","Status":"inrequest","Created":"2019-05-20 12:00:00","Modified":"2019-05-20 12:00:00","Subscription":{"Number":"1","NumberSuffix":"","ProductCode":"P004","Description":"SSL testproduct - example.com","PriceExcl":"11.5","PriceIncl":"13.915","TaxPercentage":"21","DiscountPercentage":"0","Periods":"1","Periodic":"j","StartPeriod":"2018-01-01","EndPeriod":"2018-01-01","NextDate":"2018-04-17","ContractPeriods":"1","ContractPeriodic":"j","StartContract":"2018-01-14","EndContract":"2018-01-14","TerminationDate":"","Reminder":"","InvoiceAuthorisation":"yes","AmountExcl":"11.5","AmountIncl":"13.92","AutoRenew":"no"},"SSLProductInfo":{"Name":"SSL dummy product","Brand":"SSLs","TemplateName":"","Product":"4","Periods":["1","2","3"],"Type":"domain","Wildcard":"no","MultiDomain":"yes","MultiDomainIncluded":"4","MultiDomainMax":"10"},"RegistrarInfo":{"Identifier":"1","Class":"registrarclass","Name":"Example registrar","Testmode":"1","DefaultDNSTemplate":"0","AdminHandle":"0","TechHandle":"0"}}}')
        );

        $ssl = $this->hostFact->ssl()->show([
            'Identifier' => '1',
            // 'CommonName' => 'DB0002'
        ]);

        $this->assertSame(['controller' => 'ssl', 'action' => 'show', 'status' => 'success', 'date' => '2019-05-20T12:00:00+02:00', 'ssl' => ['Identifier' => '1', 'CommonName' => 'example.com', 'Debtor' => '1', 'DebtorCode' => 'DB0001', 'Registrar' => '1', 'SSLTypeID' => '1', 'ownerHandle' => '1', 'adminHandle' => '1', 'techHandle' => '1', 'Type' => 'domain', 'Wildcard' => 'no', 'MultiDomain' => 'yes', 'MultiDomainRecords' => [], 'ApproverEmail' => 'info@hostfact.nl', 'CSR' => '-----BEGIN...QUEST-----', 'ServerSoftware' => 'linux', 'Period' => '1', 'RequestDate' => '', 'RenewDate' => '', 'RegistrarReference' => '', 'Comment' => '', 'Status' => 'inrequest', 'Created' => '2019-05-20 12:00:00', 'Modified' => '2019-05-20 12:00:00', 'Subscription' => ['Number' => '1', 'NumberSuffix' => '', 'ProductCode' => 'P004', 'Description' => 'SSL testproduct - example.com', 'PriceExcl' => '11.5', 'PriceIncl' => '13.915', 'TaxPercentage' => '21', 'DiscountPercentage' => '0', 'Periods' => '1', 'Periodic' => 'j', 'StartPeriod' => '2018-01-01', 'EndPeriod' => '2018-01-01', 'NextDate' => '2018-04-17', 'ContractPeriods' => '1', 'ContractPeriodic' => 'j', 'StartContract' => '2018-01-14', 'EndContract' => '2018-01-14', 'TerminationDate' => '', 'Reminder' => '', 'InvoiceAuthorisation' => 'yes', 'AmountExcl' => '11.5', 'AmountIncl' => '13.92', 'AutoRenew' => 'no'], 'SSLProductInfo' => ['Name' => 'SSL dummy product', 'Brand' => 'SSLs', 'TemplateName' => '', 'Product' => '4', 'Periods' => [0 => '1', 1 => '2', 2 => '3'], 'Type' => 'domain', 'Wildcard' => 'no', 'MultiDomain' => 'yes', 'MultiDomainIncluded' => '4', 'MultiDomainMax' => '10'], 'RegistrarInfo' => ['Identifier' => '1', 'Class' => 'registrarclass', 'Name' => 'Example registrar', 'Testmode' => '1', 'DefaultDNSTemplate' => '0', 'AdminHandle' => '0', 'TechHandle' => '0']]], $ssl);
    }

    /** @test */
    public function it_can_terminate_an_existing_ssl()
    {
        $this->mockApiClientResponse(
            new \GuzzleHttp\Psr7\Response(200, [], '{"controller":"ssl","action":"terminate","status":"success","date":"2019-05-20T12:00:00+02:00","success":["Dienst is opgezegd met opzegdatum 14-01-2020"],"ssl":{"Identifier":"1","CommonName":"example.com","Debtor":"1","DebtorCode":"DB0001","Registrar":"1","SSLTypeID":"1","ownerHandle":"1","adminHandle":"1","techHandle":"1","Type":"domain","Wildcard":"no","MultiDomain":"yes","MultiDomainRecords":[],"ApproverEmail":"info@hostfact.nl","CSR":"-----BEGIN...QUEST-----","ServerSoftware":"linux","Period":"1","RequestDate":"","RenewDate":"","RegistrarReference":"","Comment":"","Status":"inrequest","Created":"2019-05-20 12:00:00","Modified":"2019-05-20 12:00:00","Subscription":{"Number":"1","NumberSuffix":"","ProductCode":"P004","Description":"SSL testproduct - example.com","PriceExcl":"11.5","PriceIncl":"13.915","TaxPercentage":"21","DiscountPercentage":"0","Periods":"1","Periodic":"j","StartPeriod":"2018-01-01","EndPeriod":"2018-01-01","NextDate":"2018-04-17","ContractPeriods":"1","ContractPeriodic":"j","StartContract":"2018-01-14","EndContract":"2018-01-14","TerminationDate":"2020-01-14","Reminder":"","InvoiceAuthorisation":"yes","AmountExcl":"11.5","AmountIncl":"13.92","AutoRenew":"no"},"SSLProductInfo":{"Name":"SSL dummy product","Brand":"SSLs","TemplateName":"","Product":"4","Periods":["1","2","3"],"Type":"domain","Wildcard":"no","MultiDomain":"yes","MultiDomainIncluded":"4","MultiDomainMax":"10"},"RegistrarInfo":{"Identifier":"1","Class":"registrarclass","Name":"Example registrar","Testmode":"1","DefaultDNSTemplate":"0","AdminHandle":"0","TechHandle":"0"},"Termination":{"Date":"2020-01-14","Created":"2019-05-20 12:00:00","Status":"pending"}}}')
        );

        $ssl = $this->hostFact->ssl()->terminate([
            'Identifier' => '1',
            // 'CommonName' => 'example.com',
            // 'Date' => '2015-01-01'
        ]);

        $this->assertSame(['controller' => 'ssl', 'action' => 'terminate', 'status' => 'success', 'date' => '2019-05-20T12:00:00+02:00', 'success' => [0 => 'Dienst is opgezegd met opzegdatum 14-01-2020'], 'ssl' => ['Identifier' => '1', 'CommonName' => 'example.com', 'Debtor' => '1', 'DebtorCode' => 'DB0001', 'Registrar' => '1', 'SSLTypeID' => '1', 'ownerHandle' => '1', 'adminHandle' => '1', 'techHandle' => '1', 'Type' => 'domain', 'Wildcard' => 'no', 'MultiDomain' => 'yes', 'MultiDomainRecords' => [], 'ApproverEmail' => 'info@hostfact.nl', 'CSR' => '-----BEGIN...QUEST-----', 'ServerSoftware' => 'linux', 'Period' => '1', 'RequestDate' => '', 'RenewDate' => '', 'RegistrarReference' => '', 'Comment' => '', 'Status' => 'inrequest', 'Created' => '2019-05-20 12:00:00', 'Modified' => '2019-05-20 12:00:00', 'Subscription' => ['Number' => '1', 'NumberSuffix' => '', 'ProductCode' => 'P004', 'Description' => 'SSL testproduct - example.com', 'PriceExcl' => '11.5', 'PriceIncl' => '13.915', 'TaxPercentage' => '21', 'DiscountPercentage' => '0', 'Periods' => '1', 'Periodic' => 'j', 'StartPeriod' => '2018-01-01', 'EndPeriod' => '2018-01-01', 'NextDate' => '2018-04-17', 'ContractPeriods' => '1', 'ContractPeriodic' => 'j', 'StartContract' => '2018-01-14', 'EndContract' => '2018-01-14', 'TerminationDate' => '2020-01-14', 'Reminder' => '', 'InvoiceAuthorisation' => 'yes', 'AmountExcl' => '11.5', 'AmountIncl' => '13.92', 'AutoRenew' => 'no'], 'SSLProductInfo' => ['Name' => 'SSL dummy product', 'Brand' => 'SSLs', 'TemplateName' => '', 'Product' => '4', 'Periods' => [0 => '1', 1 => '2', 2 => '3'], 'Type' => 'domain', 'Wildcard' => 'no', 'MultiDomain' => 'yes', 'MultiDomainIncluded' => '4', 'MultiDomainMax' => '10'], 'RegistrarInfo' => ['Identifier' => '1', 'Class' => 'registrarclass', 'Name' => 'Example registrar', 'Testmode' => '1', 'DefaultDNSTemplate' => '0', 'AdminHandle' => '0', 'TechHandle' => '0'], 'Termination' => ['Date' => '2020-01-14', 'Created' => '2019-05-20 12:00:00', 'Status' => 'pending']]], $ssl);
    }
}